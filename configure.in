dnl ProFTPD - mod_amqp
dnl Copyright (c) 2017 TJ Saunders <tj@castaglia.org>
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA.
dnl
dnl Process this file with autoconf to produce a configure script.

AC_INIT(./mod_amqp.c)

AC_CANONICAL_SYSTEM

ostype=`echo $build_os | sed 's/\..*$//g' | sed 's/-.*//g' | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`

AC_PROG_CC
AC_PROG_CPP
AC_AIX
AC_ISC_POSIX
AC_MINIX
AC_PROG_MAKE_SET

dnl Need to support/handle the --with-includes and --with-libraries options
AC_ARG_WITH(includes,
  [AC_HELP_STRING(
    [--with-includes=LIST],
    [add additional include paths to proftpd. LIST is a colon-separated list of include paths to add e.g. --with-includes=/some/mysql/include:/my/include])
  ],
  [ ac_addl_includes=`echo "$withval" | sed -e 's/:/ /g'` ;
    for ainclude in $ac_addl_includes; do
      if test x"$ac_build_addl_includes" = x ; then
        ac_build_addl_includes="-I$ainclude"
      else
        ac_build_addl_includes="-I$ainclude $ac_build_addl_includes"
      fi
    done
    CPPFLAGS="$CPPFLAGS $ac_build_addl_includes"
  ])

AC_ARG_WITH(libraries,
  [AC_HELP_STRING(
    [--with-libraries=LIST],
    [add additional library paths to proftpd. LIST is a colon-separated list of include paths to add e.g. --with-libraries=/some/mysql/libdir:/my/libs])
  ],
  [ ac_addl_libdirs=`echo "$withval" | sed -e 's/:/ /g'` ;
    for alibdir in $ac_addl_libdirs; do
      if test x"$ac_build_addl_libdirs" = x ; then
        ac_build_addl_libdirs="-L$alibdir"
      else
        ac_build_addl_libdirs="-L$alibdir $ac_build_addl_libdirs"
      fi
    done
    LDFLAGS="$LDFLAGS $ac_build_addl_libdirs"
  ])

AC_HEADER_STDC
AC_CHECK_HEADERS(stdlib.h uuid/uuid.h unistd.h limits.h fcntl.h)
AC_CHECK_HEADERS(amqp.h amqp_tcp_socket.h amqp_ssl_socket.h)

AC_MSG_CHECKING([for librabbitmq AMQP_DELIVERY_PERSISTENT enum])
AC_TRY_COMPILE(
  [
    #include <sys/types.h>
    #include <amqp.h>
  ], [
    unsigned int delivery_mode = AMQP_DELIVERY_PERSISTENT;
  ], [
    AC_DEFINE(HAVE_RABBITMQ_DELIVERY_MODE, 1, [Define if you have AMQP_DELIVERY_PERSISTENT])
    AC_MSG_RESULT(yes)
  ], [
    AC_MSG_RESULT(no)
  ]
)

dnl Splice out -lsupp, since that library hasn't been built yet
saved_libs="$LIBS"
LIBS=`echo "$LIBS" | sed -e 's/-lsupp//g'`;
LIBS="$LIBS -lcrypto -lssl -lrabbitmq"

AC_MSG_CHECKING([for librabbitmq amqp_ssl_socket_new])
AC_TRY_LINK(
  [
    #include <amqp.h>
    #include <amqp_tcp_socket.h>
    #include <amqp_ssl_socket.h>
  ],
  [
    amqp_connection_state_t conn;
    (void) amqp_ssl_socket_new(conn);
  ],
  [
    AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_AMQP_SSL_SOCKET_NEW 1, [Define if you have librabbitmq amqp_ssl_socket_new])
  ],
  [
    AC_MSG_RESULT(no)
  ]
)

AC_MSG_CHECKING([for librabbitmq amqp_ssl_socket_set_verify_hostname])
AC_TRY_LINK(
  [
    #include <amqp.h>
    #include <amqp_tcp_socket.h>
    #include <amqp_ssl_socket.h>
  ],
  [
    amqp_socket_t *sock = NULL;
    (void) amqp_ssl_socket_set_verify_hostname(sock, 1);
  ],
  [
    AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_AMQP_SSL_SOCKET_SET_VERIFY_HOSTNAME, 1, [Define if you have librabbitmq amqp_ssl_socket_set_verify_hostname])
  ],
  [
    AC_MSG_RESULT(no)
  ]
)

AC_MSG_CHECKING([for librabbitmq amqp_ssl_socket_set_verify_peer])
AC_TRY_LINK(
  [
    #include <amqp.h>
    #include <amqp_tcp_socket.h>
    #include <amqp_ssl_socket.h>
  ],
  [
    amqp_socket_t *sock = NULL;
    (void) amqp_ssl_socket_set_verify_peer(sock, 1);
  ],
  [
    AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_AMQP_SSL_SOCKET_SET_VERIFY_PEER, 1, [Define if you have librabbitmq amqp_ssl_socket_set_verify_peer])
  ],
  [
    AC_MSG_RESULT(no)
  ]
)

LIBS="$saved_libs"

INCLUDES="$ac_build_addl_includes"
LIBDIRS="$ac_build_addl_libdirs"

AC_SUBST(INCLUDES)
AC_SUBST(LIBDIRS)
AC_SUBST(MODULE_LIBS)

AC_CONFIG_HEADER(mod_amqp.h)
AC_OUTPUT(
  t/Makefile
  Makefile
)
